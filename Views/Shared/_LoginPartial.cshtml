@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@*For Cookies*@
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userName = HttpContextAccessor.HttpContext.Request.Cookies["userName"] ?? UserManager.GetUserName(User);
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarIDDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @userName - Menu<b class="caret"></b>
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarIDDropdown">
                <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Change Security Settings</a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" asp-area="" asp-controller="EmployeeAccount" asp-action="Details">Manage Account Details</a>
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                </form>
            </div>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
